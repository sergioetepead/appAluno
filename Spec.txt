# 📱 Portal ETEP - Especificação Técnica Completa

## 🎯 Versão Atual: v1.4.3

### 💠 Arquitetura e Tecnologias

**Plataforma Base:**
- Apache Cordova (PhoneGap) para Android
- HTML5 + CSS3 + JavaScript ES6+ vanilla
- InAppBrowser Plugin v6.0.0 para WebViews customizadas
- Git para controle de versão

**Estrutura de Arquivos:**
```
etep-app/
├── config.xml           # Configuração Cordova, plugins, ícones
├── www/                 # App web principal
│   ├── index.html       # Interface das 3 telas
│   ├── css/index.css    # Estilos responsive + tema ETEP
│   ├── js/
│   │   ├── index.js     # App principal (ETEPApp class)
│   │   ├── services/    # Serviços modulares
│   │   │   ├── auth.js  # AuthService - validação Jacad
│   │   │   └── portal.js # PortalService - gerenciamento WebView
│   │   └── utils/       # Utilitários
│   │       ├── cpf.js   # CPFUtils - formatação/validação
│   │       └── storage.js # StorageUtils - localStorage
│   └── version.json     # Single source of truth para versões
├── platforms/           # Código nativo gerado (Android)
└── plugins/            # Plugins Cordova instalados
```

**Dependências:**
- Node.js + npm (ambiente)
- Android SDK + Java JDK 17
- Gradle para builds Android
- Cordova CLI global

---

## 🔐 Sistema de Autenticação

### Fluxo Principal:
1. **Home**: Usuário digita CPF + Senha
2. **Validação**: InAppBrowser oculto testa credenciais no Jacad
3. **Sucesso**: Navega para Menu + salva credenciais em memória
4. **Portal**: Novo InAppBrowser com auto-login das credenciais salvas

### Classe AuthService (auth.js):
```javascript
// Métodos principais:
validateCredentials(cpf, password) // Validação oculta via Jacad
saveCredentials(cpf, password)     // Armazena em memória
showAuthenticatedBrowser()         // Cria browser com auto-login
isLoggedIn()                      // Verifica autenticação
cleanup()                         // Limpa sessão
```

**Lógica de Validação:**
- Browser oculto acessa Jacad
- Preenche CPF/senha automaticamente
- Verifica se saiu da página de login E tem elementos do portal
- Considera falha se fica 5s+ na página de login
- Detecta mensagens de erro
- Rejeita senhas incorretas corretamente

**Edge Cases Identificados:**
- ✅ Sessão ativa prévia no Jacad ("você já está logado")
- ⏳ Timeout de rede/conexão lenta
- ⏳ Mudanças na estrutura HTML do Jacad

---

## 🎨 Interface e UX

### Tela 1 - Home (Login):
- Logo ETEP centralizado
- Campos: CPF (com máscara) + Senha
- Botão "Entrar" com validação
- Loading spinner durante autenticação
- Versão do app (dinâmica via version.json)

### Tela 2 - Menu:
- Logo pequeno + título "Portal ETEP"
- Botões: Portal do Aluno (ativo), outros (desabilitados)
- Botão "Sair" (logout + volta para Home)

### Tela 3 - Portal:
- InAppBrowser com barra branca personalizada
- Botões azuis (#252e62) + "Voltar" customizado
- Auto-login transparente para o usuário

**Design System:**
- Cores: Branco + Azul ETEP (#252e62)
- Font: Open Sans (Google Fonts)
- Responsive design para múltiplos tamanhos
- Animações CSS suaves

---

## 📱 Configuração Nativa

### Android (config.xml):
- Package: com.etep.portal
- Ícone: icon.png (múltiplas densidades)
- Splash screen branco com logo
- Permissões: Internet, Network State
- Target SDK: Android API 34+

### Plugins Cordova:
- cordova-plugin-inappbrowser: WebViews customizadas
- cordova-plugin-device: Info do dispositivo

---

## 🗂️ Gerenciamento de Estado

### ETEPApp (index.js):
```javascript
class ETEPApp {
  constructor()           // Inicialização
  init()                 // Setup listeners + versão
  handleLoginSubmit()    // Fluxo de login
  navigateToPortal()     // Abertura do portal
  handleLogout()         // Limpeza + volta ao início
  showLoading()          // UI feedback
}
```

### Dados Persistidos:
- **localStorage**: CPF (para auto-preenchimento)
- **Memória**: Credenciais validadas (temporário)
- **Sessão**: Estado de autenticação ativo

---

## 🚀 Build e Deploy

### Comandos Principais:
```bash
# Desenvolvimento
cordova platform add android
cordova build android
cordova run android

# Release
cordova build android --release
```

### Versionamento:
- version.json como single source of truth
- Git tags para releases
- Commits semânticos com co-author Claude

---

## 🔄 Fluxos de Usuário

### Primeiro Acesso:
1. Abre app → Tela Home
2. Digita CPF/senha → Loading
3. Sistema valida no Jacad (oculto)
4. Sucesso → Menu
5. Clica Portal → InAppBrowser com auto-login

### Acessos Seguintes:
1. CPF auto-preenchido (localStorage)
2. Usuário só digita senha
3. Mesma validação + navegação

### Logout:
1. Clica "Sair" no Menu
2. Limpa credenciais + CPF
3. Volta para Home (campos vazios)

---

## 🐛 Troubleshooting

### Problemas Conhecidos:
- **Gradle wrapper**: Resolvido com install manual
- **Java version**: Exige JDK 17 LTS
- **CRLF warnings**: Cosmético (Windows/Git)
- **Sessão Jacad ativa**: Edge case identificado

### Logs Importantes:
- Browser console para validação
- Cordova device logs
- Git commit history preservado

---

## 📋 Roadmap Futuro

### V2 Planejado:
- [ ] Backend próprio para autenticação
- [ ] Comprovante de Matrícula ativo
- [ ] Link de Pagamento ativo  
- [ ] Push notifications
- [ ] Offline mode avançado
- [ ] Google Play Store release

### Melhorias Técnicas:
- [ ] Testes automatizados
- [ ] CI/CD pipeline
- [ ] Monitoramento de erros
- [ ] Analytics de uso
- [ ] Detecção de mudanças no Jacad

---

## 👥 Equipe e Handoff

**Desenvolvido por**: Claude Code + Sergio (ETEP)
**Repositório**: https://github.com/sergioetepead/appAluno.git
**Branch principal**: master
**Última versão estável**: v1.4.3

**Para continuidade**:
- Clone do repo + npm install
- Android SDK configurado
- Credenciais de teste do Jacad
- Acesso ao GitHub do projeto

**Contato técnico**: 
- Issues no GitHub
- Documentação no próprio código
- Commits descritivos para contexto