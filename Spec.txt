üí† Estrutura Funcional
Tela 1 ‚Äì Home

Tela centralizada com o logo da institui√ß√£o (https://public.etepead.com.br/LogoEtepNovo.png)

Campo de texto simples para digitar o CPF (sem valida√ß√£o)

Ao digitar o CPF e apertar Enter ou Confirmar, navegar para a pr√≥xima tela

Tela 2 ‚Äì Menu

Exibir tr√™s bot√µes:

Portal do Aluno (ativo)

Comprovante de Matr√≠cula (desabilitado)

Link de Pagamento (desabilitado)

Ao clicar no bot√£o Portal do Aluno, abrir uma nova tela com o portal carregado via WebView nativo

Tela 3 ‚Äì Portal WebView

WebView nativo embutido com URL:
https://etepead.jacad.com.br/academico/aluno-v2/login

Topo da tela com barra branca contendo:

Logo pequeno √† esquerda (mesma URL de antes)

Bot√£o ‚ÄúVoltar‚Äù que leva de volta √† tela de Menu

üì¶ Requisitos t√©cnicos
App nativo Android usando Apache Cordova

WebView nativo para resolver problema de X-Frame-Options do portal Jacad

HTML/CSS/JS vanilla dentro do container Cordova

C√≥digo organizado: www/, platforms/, plugins/

Gera√ß√£o de APK instal√°vel para testes

Deve funcionar 100% offline (sem backend por enquanto)

Preparado para Google Play Store (futuro)

üõ† Preparado para expans√£o (V2)
O projeto deve ser estruturado para permitir f√°cil expans√£o futura:

Armazenar o CPF digitado em localStorage (WebView) ou SharedPreferences (nativo)

Estrutura preparada para uso de UserContext ou estado global simples

Ponto de entrada planejado para consumo futuro de APIs (por exemplo: /api/login-link?cpf=...)

Pensar que na V2 o CPF poder√° ser usado para:

Autentica√ß√£o com backend

Gerar login autom√°tico no portal Jacad (caso vi√°vel)

Habilitar bot√µes de comprovante e pagamento dinamicamente